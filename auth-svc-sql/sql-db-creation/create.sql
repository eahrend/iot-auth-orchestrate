-- MySQL Script generated by MySQL Workbench
-- Fri Nov  6 13:13:02 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema iot
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema iot
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `iot` DEFAULT CHARACTER SET utf8 ;
USE `iot` ;

-- -----------------------------------------------------
-- Table `iot`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `iot`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `iot`.`workspaces`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `iot`.`workspaces` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `workspace_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `workspace_name_UNIQUE` (`workspace_name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `iot`.`devices`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `iot`.`devices` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `device_name` VARCHAR(45) NOT NULL,
  `registry_id` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `iddevices_UNIQUE` (`id` ASC),
  UNIQUE INDEX `device_name_UNIQUE` (`device_name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `iot`.`roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `iot`.`roles` (
  `id` INT NOT NULL,
  `role_name` VARCHAR(45) NOT NULL,
  `workspace_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `id_idx` (`workspace_id` ASC),
  CONSTRAINT `id`
    FOREIGN KEY (`workspace_id`)
    REFERENCES `iot`.`workspaces` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `iot`.`user_workspaces`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `iot`.`user_workspaces` (
  `user_id` INT NOT NULL,
  `workspace_id` INT NOT NULL,
  `role_id` INT NOT NULL,
  INDEX `id_idx` (`user_id` ASC),
  INDEX `id_idx1` (`workspace_id` ASC),
  INDEX `id_idx2` (`role_id` ASC),
  CONSTRAINT `user_workspaces_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `iot`.`users` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `user_workspaces_workspace_id`
    FOREIGN KEY (`workspace_id`)
    REFERENCES `iot`.`workspaces` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `user_workspaces_role_id`
    FOREIGN KEY (`role_id`)
    REFERENCES `iot`.`roles` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `iot`.`methods`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `iot`.`methods` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `method_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `method_name_UNIQUE` (`method_name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `iot`.`role_methods`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `iot`.`role_methods` (
  `role_id` INT NOT NULL,
  `method_id` INT NOT NULL,
  INDEX `_idx` (`role_id` ASC),
  INDEX `role_method_method_id_idx` (`method_id` ASC),
  CONSTRAINT `role_method_role_id`
    FOREIGN KEY (`role_id`)
    REFERENCES `iot`.`roles` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `role_method_method_id`
    FOREIGN KEY (`method_id`)
    REFERENCES `iot`.`methods` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `iot`.`workspace_devices`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `iot`.`workspace_devices` (
  `workspace_id` INT NOT NULL,
  `device_id` INT NOT NULL,
  INDEX `id_idx` (`workspace_id` ASC),
  INDEX `id_idx1` (`device_id` ASC),
  CONSTRAINT `workspaces_devices_workspace_id`
    FOREIGN KEY (`workspace_id`)
    REFERENCES `iot`.`workspaces` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `device_id`
    FOREIGN KEY (`device_id`)
    REFERENCES `iot`.`devices` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `iot`.`user_devices`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `iot`.`user_devices` (
  `user_id` INT NOT NULL,
  `device_id` INT NOT NULL,
  INDEX `id_idx` (`user_id` ASC),
  INDEX `id_idx1` (`device_id` ASC),
  CONSTRAINT `user_devices_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `iot`.`users` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `user_devices_device_id`
    FOREIGN KEY (`device_id`)
    REFERENCES `iot`.`devices` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;



SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `iot`.`users`
-- -----------------------------------------------------
START TRANSACTION;
USE `iot`;
INSERT INTO `iot`.`users` (`id`, `username`, `password`) VALUES (1, 'userone', 'password1');
INSERT INTO `iot`.`users` (`id`, `username`, `password`) VALUES (2, 'usertwo', 'password2');

COMMIT;


-- -----------------------------------------------------
-- Data for table `iot`.`workspaces`
-- -----------------------------------------------------
START TRANSACTION;
USE `iot`;
INSERT INTO `iot`.`workspaces` (`id`, `workspace_name`) VALUES (1, 'workspace-one');
INSERT INTO `iot`.`workspaces` (`id`, `workspace_name`) VALUES (2, 'workspace-two');
INSERT INTO `iot`.`workspaces` (`id`, `workspace_name`) VALUES (3, 'workspace-three');

COMMIT;


-- -----------------------------------------------------
-- Data for table `iot`.`devices`
-- -----------------------------------------------------
START TRANSACTION;
USE `iot`;
INSERT INTO `iot`.`devices` (`id`, `device_name`, `registry_id`) VALUES (1, 'device-one', 'registry');
INSERT INTO `iot`.`devices` (`id`, `device_name`, `registry_id`) VALUES (2, 'device-two', 'registry');
INSERT INTO `iot`.`devices` (`id`, `device_name`, `registry_id`) VALUES (3, 'device-three', 'registry');

COMMIT;


-- -----------------------------------------------------
-- Data for table `iot`.`roles`
-- -----------------------------------------------------
START TRANSACTION;
USE `iot`;
INSERT INTO `iot`.`roles` (`id`, `role_name`, `workspace_id`) VALUES (1, 'admin', 1);
INSERT INTO `iot`.`roles` (`id`, `role_name`, `workspace_id`) VALUES (2, 'admin', 2);
INSERT INTO `iot`.`roles` (`id`, `role_name`, `workspace_id`) VALUES (3, 'admin', 3);

COMMIT;


-- -----------------------------------------------------
-- Data for table `iot`.`user_workspaces`
-- -----------------------------------------------------
START TRANSACTION;
USE `iot`;
INSERT INTO `iot`.`user_workspaces` (`user_id`, `workspace_id`, `role_id`) VALUES (1, 1, 1);
INSERT INTO `iot`.`user_workspaces` (`user_id`, `workspace_id`, `role_id`) VALUES (1, 2, 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `iot`.`methods`
-- -----------------------------------------------------
START TRANSACTION;
USE `iot`;
INSERT INTO `iot`.`methods` (`id`, `method_name`) VALUES (1, '*');

COMMIT;


-- -----------------------------------------------------
-- Data for table `iot`.`role_methods`
-- -----------------------------------------------------
START TRANSACTION;
USE `iot`;
INSERT INTO `iot`.`role_methods` (`role_id`, `method_id`) VALUES (1, 1);
INSERT INTO `iot`.`role_methods` (`role_id`, `method_id`) VALUES (2, 1);
INSERT INTO `iot`.`role_methods` (`role_id`, `method_id`) VALUES (3, 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `iot`.`workspace_devices`
-- -----------------------------------------------------
START TRANSACTION;
USE `iot`;
INSERT INTO `iot`.`workspace_devices` (`workspace_id`, `device_id`) VALUES (1, 1);
INSERT INTO `iot`.`workspace_devices` (`workspace_id`, `device_id`) VALUES (1, 2);
INSERT INTO `iot`.`workspace_devices` (`workspace_id`, `device_id`) VALUES (1, 3);
INSERT INTO `iot`.`workspace_devices` (`workspace_id`, `device_id`) VALUES (2, 3);

COMMIT;


-- -----------------------------------------------------
-- Data for table `iot`.`user_devices`
-- -----------------------------------------------------
START TRANSACTION;
USE `iot`;
INSERT INTO `iot`.`user_devices` (`user_id`, `device_id`) VALUES (1, 1);
INSERT INTO `iot`.`user_devices` (`user_id`, `device_id`) VALUES (1, 2);
INSERT INTO `iot`.`user_devices` (`user_id`, `device_id`) VALUES (1, 3);
INSERT INTO `iot`.`user_devices` (`user_id`, `device_id`) VALUES (2, 1);

COMMIT;

CREATE USER 'iot-user' IDENTIFIED BY 'Password1';

GRANT ALL ON `iot`.* TO 'iot-user';